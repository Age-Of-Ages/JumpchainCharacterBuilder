<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:convert="clr-namespace:JumpchainCharacterBuilder.Converters">

    <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    <convert:NullVisConverter x:Key="NullToVis"/>
    <convert:BoolResizeConverter x:Key="BoolToResize"/>
    <convert:UriVisConverter x:Key="UriToVis"/>
    <convert:ListContainsVisConverter x:Key="ListContainsToVis"/>

    <Style TargetType="{x:Type Grid}">
        <Setter Property="ClipToBounds" Value="False"/>
        <Setter Property="KeyboardNavigation.ControlTabNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.DirectionalNavigation" Value="None"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    </Style>
    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
    </Style>
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="IsHitTestVisible" Value="False"/>
    </Style>

    <DataTemplate x:Key="GridViewDefaultColumn">
        <TextBlock Style="{DynamicResource GridViewText}"/>
    </DataTemplate>

    <DataTemplate x:Key="GridViewNameColumn">
        <TextBlock Text="{Binding Path=Name}" Style="{DynamicResource GridViewText}"/>
    </DataTemplate>

    <DataTemplate x:Key="GridViewDescriptionColumn">
        <TextBlock Text="{Binding Path=Description}" Style="{DynamicResource GridViewText}"/>
    </DataTemplate>

    <Style x:Key="GridViewText"
           TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <Style x:Key="LargeTextBox" 
           TargetType="{x:Type TextBox}">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationTemplate}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="SpellCheck.IsEnabled" Value="{Binding SpellCheckEnabled}"/>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="MaxLength" Value="100"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationTemplate}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="SpellCheck.IsEnabled" Value="{Binding SpellCheckEnabled}"/>
    </Style>

    <Style x:Key="DataGridDescriptionColumn"
           TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationTemplate}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="SpellCheck.IsEnabled" Value="{Binding SpellCheckEnabled}"/>
    </Style>

    <Style x:Key="DataGridEditDescriptionColumn" 
           TargetType="{x:Type TextBox}">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationTemplate}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="AcceptsReturn" Value="True"/>
        <Setter Property="AcceptsTab" Value="True"/>
        <Setter Property="SpellCheck.IsEnabled" Value="{Binding SpellCheckEnabled}"/>
    </Style>

    <Style x:Key="DataGridButton"
           TargetType="{x:Type Button}">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="2"/>
            </Style>
        </Style.Resources>
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="MinHeight" Value="25"/>
    </Style>

    <Style TargetType="ScrollViewer">
        <Setter Property="CanContentScroll" Value="False"/>
    </Style>

    <ControlTemplate x:Key="ValidationTemplate">
        <DockPanel ToolTip="{Binding ElementName=ErrorAdorner, 
                   Path=AdornedElement.(Validation.Errors)/ErrorContent}"
                   ToolTipService.InitialShowDelay="100">
            <Grid DockPanel.Dock="Right" Margin="1,0,0,0">
                <Ellipse Width="14" Height="14" Fill="Red" 
                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Foreground="White" FontWeight="Heavy" 
                           FontSize="8" HorizontalAlignment="Center" 
                           VerticalAlignment="Center" TextAlignment="Center"
                           Text="!"/>
            </Grid>
            
            <AdornedElementPlaceholder x:Name="ErrorAdorner">
                <Border BorderBrush="Red" BorderThickness="2"/>
            </AdornedElementPlaceholder>
        </DockPanel>
    </ControlTemplate>

    <Style x:Key="TextBoxHintTemplate"
       TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock x:Name="HintText" Text="{TemplateBinding Tag}" Visibility="Collapsed" Foreground="Gray" Margin="2,0,0,0"/>
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="HintText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LargeTextBoxHintTemplate"
           TargetType="{x:Type TextBox}" BasedOn="{StaticResource LargeTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock x:Name="HintText" Text="{TemplateBinding Tag}" Visibility="Collapsed" Foreground="Gray" Margin="2,0,0,0"
                                       TextWrapping="Wrap"/>
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="HintText" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF7EB4EA"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FF569DE5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TitleBox" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="MediumBlue"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Margin" Value="-1"/>
    </Style>
    <Style x:Key="BudgetBox" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="CadetBlue"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Margin" Value="-1"/>
    </Style>

    <ControlTemplate x:Key="BudgetPanel"
                     TargetType="{x:Type ContentControl}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type StackPanel}">
                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
            </Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="Black"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="CornerRadius" Value="1"/>
            </Style>
        </ControlTemplate.Resources>

        <StackPanel>
            <Border>
                <Label Style="{DynamicResource TitleBox}" Content="Budget"/>
            </Border>
            <Border Margin="-5,0,0,0">
                <Label Style="{DynamicResource BudgetBox}" Content="{Binding Budget}"/>
            </Border>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="CharacterSelector"
                     TargetType="{x:Type ContentControl}">
        <ControlTemplate.Resources>
            <Style TargetType="{x:Type StackPanel}">
                <Setter Property="Orientation" Value="Vertical"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="MinWidth" Value="125"/>
            </Style>
        </ControlTemplate.Resources>

        <StackPanel>
            <TextBlock Text="Character"/>
            <ComboBox ItemsSource="{Binding CharacterList}" DisplayMemberPath="Name" 
                      SelectedItem="{Binding CharacterSelection}"
                      SelectedIndex="{Binding CharacterSelectionIndex}"/>
        </StackPanel>
    </ControlTemplate>
</ResourceDictionary>